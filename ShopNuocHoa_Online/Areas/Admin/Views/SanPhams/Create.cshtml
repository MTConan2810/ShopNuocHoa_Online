@model ShopNuocHoa_Online.Models.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Tạo sản phẩm</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SanPham</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaDM, "MaDM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaDM", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaDM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaKM, "MaKM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaKM", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaKM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NhanHieu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NhanHieu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NhanHieu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XuatXu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.XuatXu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.XuatXu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TgPhatHanh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TgPhatHanh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TgPhatHanh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NongDo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NongDo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NongDo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NhaPC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NhaPC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NhaPC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NhomHuong, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NhomHuong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NhomHuong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhongCach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhongCach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhongCach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MauSac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MauSac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MauSac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BoSuuTap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BoSuuTap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BoSuuTap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HuongDacTrung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HuongDacTrung, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HuongDacTrung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Anh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="output" class="img-rounded" alt="Ảnh" width="180" height="200" src="~/wwwroot/Images/no-image-news.png" />
                <p><label for="ufile" style="cursor:pointer">Chọn file ảnh</label></p>
                <input name="ImageFile" id="ufile" type="file" style="display:none" onchange="loadFile(event)" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("quay lại", "Index")
</div>
@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var loadFile = function (event) {
        document.getElementById("output").src = URL.createObjectURL(event.target.files[0])
    };
</script>